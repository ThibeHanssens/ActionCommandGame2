@page "/play/profile"
@attribute [Authorize]
@layout MainLayout

@using ActionCommandGame.Services.Model.Requests
@using ActionCommandGame.Services.Model.Results
@inject ProfileService ProfileService
@inject AuthenticationStateProvider AuthProvider

<div class="profile-page container">
    <h2>Profile</h2>

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }
    @if (!string.IsNullOrEmpty(SuccessMessage))
    {
        <div class="alert alert-success">@SuccessMessage</div>
    }

    <EditForm Model="profileModel" OnValidSubmit="HandleProfileUpdate">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="username">User Name</label>
            <InputText id="username"
                       @bind-Value="profileModel.UserName"
                       class="form-control" />
        </div>

        <div class="form-group mb-3">
            <label for="email">Email</label>
            <InputText id="email"
                       type="email"
                       @bind-Value="profileModel.Email"
                       class="form-control" />
        </div>

        <div class="form-group mb-3">
            <label for="phone">Phone Number</label>
            <InputText id="phone"
                       type="tel"
                       @bind-Value="profileModel.PhoneNumber"
                       class="form-control" />
        </div>

        <hr />

        <div class="form-group mb-3">
            <label for="currentPassword">Current Password</label>
            <InputText id="currentPassword"
                       type="password"
                       @bind-Value="profileModel.CurrentPassword"
                       class="form-control" />
        </div>

        <div class="form-group mb-3">
            <label for="newPassword">New Password</label>
            <InputText id="newPassword"
                       type="password"
                       @bind-Value="profileModel.NewPassword"
                       class="form-control" />
        </div>

        <div class="form-group mb-3">
            <label for="confirmPassword">Confirm Password</label>
            <InputText id="confirmPassword"
                       type="password"
                       @bind-Value="profileModel.ConfirmPassword"
                       class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary w-100">
            Save Changes
        </button>
    </EditForm>
</div>

@code {
    private UserProfileUpdateRequest profileModel = new();
    private string ErrorMessage = "";
    private string SuccessMessage = "";

    protected override async Task OnInitializedAsync()
    {
        var result = await ProfileService.GetProfileAsync();
        if (result == null)
        {
            ErrorMessage = "Unable to load your profile.";
            return;
        }

        // populate the form
        profileModel.UserName = result.UserName;
        profileModel.Email = result.Email;
        profileModel.PhoneNumber = result.PhoneNumber;
    }

    private async Task HandleProfileUpdate()
    {
        ErrorMessage = SuccessMessage = "";

        // require current password if they're changing it
        if (!string.IsNullOrEmpty(profileModel.NewPassword)
            && string.IsNullOrEmpty(profileModel.CurrentPassword))
        {
            ErrorMessage = "Current password is required to set a new password.";
            return;
        }

        var result = await ProfileService.UpdateProfileAsync(profileModel);
        if (!result.Success)
        {
            ErrorMessage = string.Join(" ", result.Errors ?? Array.Empty<string>());
        }
        else
        {
            SuccessMessage = "Profile updated successfully!";
            // clear the password fields
            profileModel.CurrentPassword =
            profileModel.NewPassword =
            profileModel.ConfirmPassword = "";
        }
    }
}
