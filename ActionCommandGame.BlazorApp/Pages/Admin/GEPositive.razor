@page "/admin/ge-positive"
@layout MainLayout
@attribute [Authorize(Roles = "SuperAdmin")]

@using ActionCommandGame.Services.Model.Results
@inject AdminService AdminService

<div class="d-flex align-items-center mb-3">
    <NavLink class="btn btn-secondary" href="/admin">← Back</NavLink>
    <h3 class="flex-grow-1 text-center mb-0">Positive Game Events</h3>
    <div style="width:5rem"></div>
</div>
<button class="btn btn-success mb-3" @onclick="New">+ New</button>

<EditForm Model="current" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    @if (showForm)
    {
        <div class="card p-3 mb-3">
            <div class="row g-2">
                <div class="col">
                    <label class="form-label">Name</label>
                    <InputText class="form-control" @bind-Value="current.Name" placeholder="Name" />
                </div>
                <div class="col">
                    <label class="form-label">Money</label>
                    <InputNumber class="form-control" @bind-Value="current.Money" placeholder="Money" />
                </div>
                <div class="col">
                    <label class="form-label">XP</label>
                    <InputNumber class="form-control" @bind-Value="current.Experience" placeholder="XP" />
                </div>
                <div class="col">
                    <label class="form-label">Probability</label>
                    <InputNumber class="form-control" @bind-Value="current.Probability" placeholder="Probability" />
                </div>
                <div class="col-auto">
                    <button class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-secondary ms-1" @onclick="Cancel">Cancel</button>
                </div>
            </div>
        </div>
    }
</EditForm>

@if (loading)
{
    <p>Loading…</p>
}
else
{
    <ul class="list-group mb-3">
        @foreach (var ev in events)
        {
            <li class="list-group-item d-flex justify-content-between align-items-start">
                <div>
                    <strong>@ev.Name</strong> (💰@ev.Money, XP @ev.Experience)
                        <small class="d-block text-muted">Probability: @ev.Probability</small>
                </div>
                <button class="btn btn-sm btn-danger" @onclick="() => Delete(ev.Id)">X</button>
            </li>
        }
    </ul>
}

@code {
    private bool loading;
    private bool showForm;
    private PositiveGameEventResult current = new() { Name = string.Empty };
    private List<PositiveGameEventResult> events = new();

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        loading = true;
        var res = await AdminService.GetAllPositiveAsync();
        events = res.Data?.ToList() ?? new();
        loading = false;
    }

    void New()
    {
        current = new PositiveGameEventResult { Name = string.Empty };
        showForm = true;
    }

    void Cancel() => showForm = false;

    async Task Save()
    {
        await AdminService.CreatePositiveAsync(current);
        showForm = false;
        await Load();
    }

    async Task Delete(int id)
    {
        await AdminService.DeletePositiveAsync(id);
        await Load();
    }
}
